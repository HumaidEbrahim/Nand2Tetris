// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    DMux8Way(in=load , sel=address[0..2] , a=reg0, b=reg1 , c=reg2 , d=reg3 , e=reg4 , f=reg5 , g=reg6 , h=reg7 );

    RAM8(in=in , load=reg0 , address=address[3..5] , out=reg0out );
    RAM8(in=in , load=reg1 , address=address[3..5] , out=reg1out );
    RAM8(in=in , load=reg2 , address=address[3..5] , out=reg2out );    
    RAM8(in=in , load=reg3 , address=address[3..5] , out=reg3out );
    RAM8(in=in , load=reg4 , address=address[3..5] , out=reg4out );    
    RAM8(in=in , load=reg5 , address=address[3..5] , out=reg5out ); 
    RAM8(in=in , load=reg6 , address=address[3..5] , out=reg6out );
    RAM8(in=in , load=reg7 , address=address[3..5] , out=reg7out );

    Mux8Way16(a=reg0out , b=reg1out , c=reg2out , d=reg3out , e=reg4out , f=reg5out , g=reg6out , h=reg7out , sel=address[0..2] , out=out );



}